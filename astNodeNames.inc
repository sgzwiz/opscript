
NODE_ITEM(goal)
NODE_ITEM(program)
NODE_ITEM(program_header)
NODE_ITEM(opt_program_parameters)
NODE_ITEM(identifier_list)
NODE_ITEM(program_block)
NODE_ITEM(uses_clause)
NODE_ITEM(block)
NODE_ITEM(implementation_declarations)
NODE_ITEM(unit)
NODE_ITEM(interface_section)
NODE_ITEM(implementation_section)
NODE_ITEM(opt_semicolon)
NODE_ITEM(init_section)
NODE_ITEM(directive_el)
NODE_ITEM(interface_declarations)
NODE_ITEM(routine_definition)
NODE_ITEM(function_declaration)
NODE_ITEM(opt_external)
NODE_ITEM(procedure_declaration)
NODE_ITEM(constructor_declaration)
NODE_ITEM(destructor_declaration)
NODE_ITEM(function_header)
NODE_ITEM(procedure_header)
NODE_ITEM(constructor_header)
NODE_ITEM(destructor_header)
NODE_ITEM(opt_parameter_list)
NODE_ITEM(parameter_list)
NODE_ITEM(formal_parameter )
NODE_ITEM(param_item)
NODE_ITEM(parameter )
NODE_ITEM(function_return)
NODE_ITEM(const_definition_list)
NODE_ITEM(type_declaration_list)
NODE_ITEM(list_var_declaration)
NODE_ITEM(typed_constant)
NODE_ITEM(record_constant)
NODE_ITEM(record_field_constant_list)
NODE_ITEM(record_field_constant)
NODE_ITEM(typed_constant_list)
NODE_ITEM(array_constant)
NODE_ITEM(const_definition)
NODE_ITEM(restricted_type)
NODE_ITEM(type_declaration)
NODE_ITEM(var_declaration)
NODE_ITEM(opt_packed)
NODE_ITEM(struct_type )
NODE_ITEM(type_spec)
NODE_ITEM(defptr_list)
NODE_ITEM(simple_type)
NODE_ITEM(simple_type_list)
NODE_ITEM(field_list)
NODE_ITEM(rec_variant)
NODE_ITEM(rec_variant_list)
NODE_ITEM(variant_section)
NODE_ITEM(opt_field_list)
NODE_ITEM(field_declaration)
NODE_ITEM(varfield_declaration)
NODE_ITEM(statement_raise)
NODE_ITEM(statement)
NODE_ITEM(with_list)
NODE_ITEM(statement_with)
NODE_ITEM(try_handler)
NODE_ITEM(handler)
NODE_ITEM(handler_list)
NODE_ITEM(except_handler)
NODE_ITEM(statement_try)
NODE_ITEM(statement_assign)
NODE_ITEM(statement_repeat)
NODE_ITEM(statement_while)
NODE_ITEM(statement_if)
NODE_ITEM(statement_for)
NODE_ITEM(statement_case)
NODE_ITEM(compound_statement)
NODE_ITEM(statement_list)
NODE_ITEM(list_case_option)
NODE_ITEM(case_item_list)
NODE_ITEM(case_item)
NODE_ITEM(case_option)
NODE_ITEM(object_type)
NODE_ITEM(object_inheritance)
NODE_ITEM(object_body)
NODE_ITEM(obj_field_list)
NODE_ITEM(method_list)
NODE_ITEM(directive_list)
NODE_ITEM(method_heading)
NODE_ITEM(class_type)
NODE_ITEM(class_body)
NODE_ITEM(class_heritage)
NODE_ITEM(class_items_list)
NODE_ITEM(class_items_section)
NODE_ITEM(class_method_heading)
NODE_ITEM(class_visibility)
NODE_ITEM(property_definition)
NODE_ITEM(opt_property_interface)
NODE_ITEM(property_specifiers)
NODE_ITEM(opt_read)
NODE_ITEM(opt_write)
NODE_ITEM(opt_stored)
NODE_ITEM(opt_index)
NODE_ITEM(opt_default)
NODE_ITEM(opt_implements)
NODE_ITEM(interface_type)
NODE_ITEM(dispinterface_type)
NODE_ITEM(opt_guid)
NODE_ITEM(interface_body)
NODE_ITEM(as_expression)
NODE_ITEM(shift_expression)
NODE_ITEM(multiplicative_expression)
NODE_ITEM(additive_expression)
NODE_ITEM(relational_expression)
NODE_ITEM(equality_expression)
NODE_ITEM(and_expression)
NODE_ITEM(exclusive_or_expression)
NODE_ITEM(inclusive_or_expression)
NODE_ITEM(logical_and_expression)
NODE_ITEM(logical_or_expression)
NODE_ITEM(simple_expression)
NODE_ITEM(expression)
NODE_ITEM(proc_func_expression)
NODE_ITEM(expression_list)
NODE_ITEM(record_expression)
NODE_ITEM(array_elt_expression)
NODE_ITEM(array_expression)
NODE_ITEM(simple_const)

  // extras...
NODE_ITEM(statement_label)
NODE_ITEM(statement_goto)
NODE_ITEM(message_directive)
NODE_ITEM(procedure_definition)
NODE_ITEM(function_definition)
NODE_ITEM(constructor_definition)
NODE_ITEM(destructor_definition)
NODE_ITEM(procedure_type)
NODE_ITEM(object_procedure_type)
NODE_ITEM(function_type)
NODE_ITEM(object_function_type)
  
NODE_ITEM(private_section)
NODE_ITEM(protected_section)
NODE_ITEM(public_section)
NODE_ITEM(published_section)
NODE_ITEM(unqualified_section)

NODE_ITEM(variable_member)
NODE_ITEM(method_member)
NODE_ITEM(script)
NODE_ITEM(sub_expression)

NODE_ITEM(sized_string)
NODE_ITEM(ranged_item)
NODE_ITEM(dispid)
NODE_ITEM(interface_forward_decl)
NODE_ITEM(disp_forward_decl)
NODE_ITEM(script_block)

